#
# This action could publish to the POptUS PyPI account the source distribution
# and universal wheel that it produces.  For more information on potential
# security issues associated with automatic publishing, please refer to
#
#        https://docs.pypi.org/trusted-publishers/security-model/
#
# In particular, there exists the possibility of breaking that page or allowing
# nefarious actors to alter it.  Since POptUS will likely be released only a few
# times a year, we presently prefer the conservative route of manually
# publishing to PyPI the distributions built and tested by this action.
#
# ALL CHANGES TO THIS ACTION SHOULD BE REVIEWED VERY CAREFULLY TO ENSURE THAT
#             THE CHANGES ARE AS INTENDED AND WELL UNDERSTOOD!
#

name: Build & test release candidate
env:
  PKG_ROOT:   ${{ github.workspace }}/poptus_pypkg
  DIST_PATH:  ${{ github.workspace }}/poptus_pypkg/dist

on:
  # This action is used only on main to produce release candidate distributions
  # and test these thoroughly on a wide range of test setups.
  #
  # Significant but simpler testing is done on feature branches using the
  # test_sdist action.
  # TODO: Temporarily run action on PR into main so that we can test this.
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:    [published]

jobs:
  build:
    name: Build release candidate distributions
    strategy:
      matrix:
        os:             [ubuntu-latest]
        python-version: ["3.14"]
    runs-on: ${{ matrix.os }}
    steps:
      # Clone the repository with the full history since setuptools-scm needs
      # the tags to set the correct version.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Construct srcdist and wheel
        run: |
          # Install dependencies
          which python
          python -m pip install --upgrade pip
          python -m pip install build
          python -m pip list
          # Build distributions
          pushd $PKG_ROOT
          python -m build
          popd
      - name: Archive source distribution
        uses: actions/upload-artifact@v4
        with:
          name: poptus-release-candidate
          path: ${{ env.DIST_PATH }}/poptus-*.*

  test_sdist:
    name: Test source distribution
    needs: [build]
    strategy:
      matrix:
        # python-versions must be maintained consistent with associated
        # pyproject.toml and tox.ini configuration.
        matrix:
          os: [ubuntu-22.04, ubuntu-24.04, macos-13, macos-14, macos-15]
          python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Access distributions
        uses: actions/download-artifact@v4
        with:
          name: poptus-release-candidate
          path: ${{ env.CLONE_PATH }}
      - name: Setup Python, install, & test
        run: |
          which python
          python -m pip install --upgrade pip
          python -m pip install poptus-*.tar.gz
          python -m pip list
          python -c "import poptus ; exit(not poptus.test())"

  test_wheel:
    name: Test universal wheel
    needs: [build]
    strategy:
      matrix:
        # python-versions must be maintained consistent with associated
        # pyproject.toml and tox.ini configuration.
        matrix:
          os: [ubuntu-22.04, ubuntu-24.04, macos-13, macos-14, macos-15]
          python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Access distributions
        uses: actions/download-artifact@v4
        with:
          name: poptus-release-candidate
          path: ${{ env.CLONE_PATH }}
      - name: Setup Python, install, & test
        run: |
          which python
          python -m pip install --upgrade pip
          python -m pip install poptus-*-py3-none-any.whl
          python -m pip list
          python -c "import poptus ; exit(not poptus.test())"
